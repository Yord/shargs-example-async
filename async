#!/usr/bin/env node

const {parser} = require('shargs')
const {number, string, flag} = require('shargs-opts')
const {cast, flagsAsBools, requireOptions, splitShortOptions, traverseOpts} = require('shargs-parser')
const {note, optsList, space, synopsis, usage} = require('shargs-usage')

const opts = [
  string('question', ['-q', '--question'], {desc: 'A question.', required: true}),
  number('answer', ['-a', '--answer'], {desc: 'The answer.'}),
  flag('help', ['-h', '--help'], {desc: 'Print this help message and exit.'})
]

const answerQuestion = ({errs, opts}) => new Promise(resolve =>
  setTimeout(
    () => {
      const isAnswer = ({key}) => key === 'answer'
      const answer42 = opt => ({
        opts: [{...opt, values: opt.values || ['42']}]
      })

      resolve(traverseOpts(isAnswer)(answer42)({errs, opts}))
    },
    5000
  )
)

const stages = {
  argv: [splitShortOptions],
  opts: [requireOptions, answerQuestion, cast],
  args: [flagsAsBools]
}

const docs = usage([
  synopsis('deepThought'),
  space,
  optsList,
  space,
  note(
    'Deep Thought was created to come up with the Answer to ' +
    'The Ultimate Question of Life, the Universe, and Everything.'
  )
])

const style = {
  line: {width: 80},
  cols: [{width: 25}, {width: 55}]
}

const argv = process.argv.slice(2)

const deepThought = parser(stages, {async: true})(opts)

deepThought(argv)
.then(({args, errs}) => {
  const help = docs(opts)(style)

  if (args.help) {
    console.log(help)
    process.exit(0)
  } else if (errs.length > 0) {
    errs.forEach(
      ({code, msg, info}) => console.log(`${code}: ${msg}\n\nInfo: ${JSON.stringify(info, null, 2)}`)
    )
    process.exit(1)
  } else {
    console.log(`The answer is: ${args.answer}\n\n${JSON.stringify(args, null, 2)}`)
    process.exit(0)
  }
})